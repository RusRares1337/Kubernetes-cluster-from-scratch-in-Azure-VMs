trigger:
  - master
  
resources:
- repo: self

pool:
  name: self-hosted

variables:
  imageRepo: sampleapp
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'acrtest123rares'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/App/Dockerfile'
        tags: |
          $(tag)
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'
        
- stage: Deploy
  displayName: Deploy
  dependsOn: Build
  variables:
    acrsecret: acrtest123raresauth
    acrdevurl: 'acrtest123rares.azurecr.io'
    replicaNo: 1
  jobs:
  - deployment: Deploy
    displayName: Deploy to K8s
    environment: 'K8s.dev-cluster'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'manifests'
              targetPath: '$(Pipeline.Workspace)/manifests'
          - task: KubernetesManifest@0
            inputs:
              kubernetesServiceConnection: K8s-dev-cluster-1694517406855
              action: 'createSecret'
              namespace: 'dev-cluster'
              secretType: 'dockerRegistry'
              secretName: '$(acrsecret)'
              dockerRegistryEndpoint: 'acrtest123rares'
          - task: KubernetesManifest@0
            inputs:
              kubernetesServiceConnection: K8s-dev-cluster-1694517406855
              action: 'deploy'
              namespace: 'default'
              manifests: |
                $(Pipeline.Workspace)/manifests/Deployment.yml
                $(Pipeline.Workspace)/manifests/Service.yml
              containers: '$(acrdevurl)/$(imageRepo):$(tag)'
              imagePullSecrets: '$(acrsecret)'